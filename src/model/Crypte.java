package model;

import model.ServiceMedical;

public class Crypte extends ServiceMedical {
    private int niveauVentilation; // CaractÃ©ristique spÃ©cifique
    private int temperature; // CaractÃ©ristique spÃ©cifique

    public Crypte(String nom, int limitePatients, int niveauVentilation, int temperature) {
        super(nom, limitePatients);
        this.niveauVentilation = niveauVentilation;
        this.temperature = temperature;
    }

    public Crypte(String nom, int niveauVentilation, int temperature) {
        super(nom, 20);
        this.niveauVentilation = niveauVentilation;
        this.temperature = temperature;
    }

    @Override
    public boolean ajouterCreatureSiPossible(Creature creature) {
        // VÃ©rifie si la crÃ©ature est rÃ©gÃ©nÃ©rante avant de l'ajouter
        if (creature.estRegenerante() && super.ajouterCreatureSiPossible(creature)) {
            return true;
        } else {
            System.out.println("La crÃ©ature " + creature.getNom() + " n'est pas rÃ©gÃ©nÃ©rante et ne peut pas Ãªtre admise dans la Crypte.");
            return false;
        }
    }

    public int getNiveauVentilation() {
        return niveauVentilation;
    }

    public void setNiveauVentilation(int niveauVentilation) {
        this.niveauVentilation = niveauVentilation;
    }

    public int getTemperature() {
        return temperature;
    }

    public void setTemperature(int temperature) {
        this.temperature = temperature;
    }

    @Override
    public void afficherRapport() {
        System.out.println("\nğŸ“‹ Rapport de la Crypte " + getNom() + " :");
        System.out.println("Niveau de ventilation : " + niveauVentilation);
        System.out.println("TempÃ©rature : " + temperature + "Â°C");
        super.afficherRapport();
    }
    
    public void reviserBudget() {
        int coutVentilation = niveauVentilation * 100;
        int coutTemperature = Math.abs(22 - temperature) * 50; // Exemple de coÃ»t selon une tempÃ©rature optimale de 22Â°C
        int budgetTotal = coutVentilation + coutTemperature;

        System.out.println("RÃ©vision du budget de la crypte " + getNom() + ": " +
                           "Ventilation (" + niveauVentilation + "), TempÃ©rature (" + temperature + 
                           "Â°C) = " + budgetTotal + " crÃ©dits.");
    }
}
